{
  "hash": "27e5343698df6694d16e770681084c0d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"06 Black-Box Models with LIME\"\nauthor: \"Maximilian Muza\"\ndate: \"6/6/2024\"\nparams:\n  data_dir: \"../../data/\"\n  models_dir: \"../../models/\"\n---\n\n\nLoad the absolute path to the data directory.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_dir <- params$data_dir\nmodels_dir <- params$models_dir\n```\n:::\n\n\n# Libraries\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(h2o)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n#> \n#> ----------------------------------------------------------------------\n#> \n#> Your next step is to start H2O:\n#>     > h2o.init()\n#> \n#> For H2O package documentation, ask for help:\n#>     > ??h2o\n#> \n#> After starting H2O, you can use the Web UI at http://localhost:54321\n#> For more information visit https://docs.h2o.ai\n#> \n#> ----------------------------------------------------------------------\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n#> \n#> Attaching package: 'h2o'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n#> The following objects are masked from 'package:stats':\n#> \n#>     cor, sd, var\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n#> The following objects are masked from 'package:base':\n#> \n#>     %*%, %in%, &&, ||, apply, as.factor, as.numeric, colnames,\n#>     colnames<-, ifelse, is.character, is.factor, is.numeric, log,\n#>     log10, log1p, log2, round, signif, trunc\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.4     ✔ readr     2.1.5\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.1\n#> ✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n#> ✔ purrr     1.0.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ lubridate::day()   masks h2o::day()\n#> ✖ dplyr::filter()    masks stats::filter()\n#> ✖ lubridate::hour()  masks h2o::hour()\n#> ✖ dplyr::lag()       masks stats::lag()\n#> ✖ lubridate::month() masks h2o::month()\n#> ✖ lubridate::week()  masks h2o::week()\n#> ✖ lubridate::year()  masks h2o::year()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(recipes)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n#> \n#> Attaching package: 'recipes'\n#> \n#> The following object is masked from 'package:stringr':\n#> \n#>     fixed\n#> \n#> The following object is masked from 'package:stats':\n#> \n#>     step\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(rsample)\nlibrary(skimr)\nlibrary(GGally)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n#> Registered S3 method overwritten by 'GGally':\n#>   method from   \n#>   +.gg   ggplot2\n```\n\n\n:::\n:::\n\n\n# Load Data Definitions\n\n::: {.cell}\n\n```{.r .cell-code}\ndefinitions_raw_tbl   <- read_excel(file.path(data_dir, \"data_definitions.xlsx\"), sheet = 1, col_names = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n#> New names:\n#> • `` -> `...1`\n#> • `` -> `...2`\n```\n\n\n:::\n\n```{.r .cell-code}\ndefinitions_raw_tbl |> as_tibble() |> print()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 35 × 2\n#>    ...1                    ...2             \n#>    <chr>                   <chr>            \n#>  1 Education               1 'Below College'\n#>  2 <NA>                    2 'College'      \n#>  3 <NA>                    3 'Bachelor'     \n#>  4 <NA>                    4 'Master'       \n#>  5 <NA>                    5 'Doctor'       \n#>  6 <NA>                    <NA>             \n#>  7 EnvironmentSatisfaction 1 'Low'          \n#>  8 <NA>                    2 'Medium'       \n#>  9 <NA>                    3 'High'         \n#> 10 <NA>                    4 'Very High'    \n#> # ℹ 25 more rows\n```\n\n\n:::\n:::\n\n\n# Load Employee Attrition\n\n::: {.cell}\n\n```{.r .cell-code}\nemployee_attrition_tbl <- read_csv(file.path(data_dir, \"datasets-1067-1925-WA_Fn-UseC_-HR-Employee-Attrition.txt\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n#> Rows: 1470 Columns: 35\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr  (9): Attrition, BusinessTravel, Department, EducationField, Gender, Job...\n#> dbl (26): Age, DailyRate, DistanceFromHome, Education, EmployeeCount, Employ...\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nemployee_attrition_tbl |> as_tibble() |> print()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 1,470 × 35\n#>      Age Attrition BusinessTravel    DailyRate Department       DistanceFromHome\n#>    <dbl> <chr>     <chr>                 <dbl> <chr>                       <dbl>\n#>  1    41 Yes       Travel_Rarely          1102 Sales                           1\n#>  2    49 No        Travel_Frequently       279 Research & Deve…                8\n#>  3    37 Yes       Travel_Rarely          1373 Research & Deve…                2\n#>  4    33 No        Travel_Frequently      1392 Research & Deve…                3\n#>  5    27 No        Travel_Rarely           591 Research & Deve…                2\n#>  6    32 No        Travel_Frequently      1005 Research & Deve…                2\n#>  7    59 No        Travel_Rarely          1324 Research & Deve…                3\n#>  8    30 No        Travel_Rarely          1358 Research & Deve…               24\n#>  9    38 No        Travel_Frequently       216 Research & Deve…               23\n#> 10    36 No        Travel_Rarely          1299 Research & Deve…               27\n#> # ℹ 1,460 more rows\n#> # ℹ 29 more variables: Education <dbl>, EducationField <chr>,\n#> #   EmployeeCount <dbl>, EmployeeNumber <dbl>, EnvironmentSatisfaction <dbl>,\n#> #   Gender <chr>, HourlyRate <dbl>, JobInvolvement <dbl>, JobLevel <dbl>,\n#> #   JobRole <chr>, JobSatisfaction <dbl>, MaritalStatus <chr>,\n#> #   MonthlyIncome <dbl>, MonthlyRate <dbl>, NumCompaniesWorked <dbl>,\n#> #   Over18 <chr>, OverTime <chr>, PercentSalaryHike <dbl>, …\n```\n\n\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}